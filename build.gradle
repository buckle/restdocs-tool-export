plugins {
  id 'org.asciidoctor.jvm.convert' version '3.3.2'
  id 'java'
  id 'jacoco'
  id 'maven-publish'
  id 'signing'
}

group = 'com.github.buckle'
version = '0.0.6-RELEASE'

java {
  sourceCompatibility = JavaVersion.VERSION_17
}

repositories {
  mavenCentral()
}

ext {
  set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
  implementation('org.springframework.restdocs:spring-restdocs-core:3.0.0')
  implementation('org.springframework:spring-web:6.0.17')
  implementation('org.slf4j:slf4j-api:2.0.9')

  implementation('org.apache.commons:commons-lang3:3.13.0')
  implementation('commons-io:commons-io:2.14.0')
  implementation('org.apache.commons:commons-text:1.10.0')
  implementation('com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2')

  testImplementation('org.springframework.restdocs:spring-restdocs-mockmvc:3.0.0')
  testImplementation('org.springframework:spring-webmvc:6.0.12') {
    because 'version 6.0.0 pulled in by spring-restdocs-mockmvc:3.0.0 affected by vulnerability'
  }

  testImplementation('org.springframework.boot:spring-boot-starter-test:3.1.8')
  testImplementation('org.yaml:snakeyaml:2.2') {
    because 'version 1.33 pulled in by spring-boot-starter-test:3.1.4 affected by vulnerability'
  }
  testImplementation('com.jayway.jsonpath:json-path:2.9.0') {
    because 'version 2.8.0 pulled in by spring-boot-starter-test:3.1.8 affected by vulnerability'
  }

  testImplementation('org.mockito:mockito-core:5.5.0')
  testImplementation('org.mockito:mockito-junit-jupiter:5.5.0')
  testImplementation('org.junit.jupiter:junit-jupiter:5.10.0')
}

tasks.register('sourceJar', Jar) {
  from sourceSets.main.allJava
  archiveClassifier = 'sources'
}

tasks.register('javadocJar', Jar) {
  from javadoc
  archiveClassifier = 'javadoc'
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from components.java
      artifact sourceJar
      artifact javadocJar
      pom {
        name = 'Restdocs Tool Export'
        description = 'Generates AsciiDoc snippets via Spring Restdocs that are exports for Insomnia or Postman that can be download and imported.'
        url = 'https://github.com/buckle/restdocs-tool-export'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'stacyp'
            name = 'Stacy Peace'
            email = 'stacy.peace@buckle.com'
          }
        }
        scm {
          connection = 'scm:git:git@github.com:buckle/restdocs-tool-export.git'
          developerConnection = 'scm:git:git@github.com:buckle/restdocs-tool-export.git'
          url = 'https://github.com/buckle/restdocs-tool-export'
        }
      }
    }
  }
  repositories {
    maven {
      def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
      def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
      url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

      credentials {
        username = project.findProperty('mavenCentralUser') ? project.findProperty('mavenCentralUser') : ''
        password = project.findProperty('mavenCentralAPIKey') ? project.findProperty('mavenCentralAPIKey') : ''
      }
    }
  }
}

signing {
  useGpgCmd()
  sign publishing.publications.mavenJava
}

test {
  outputs.dir snippetsDir
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
  dependsOn test
  violationRules {
    rule {
      element = 'CLASS'
      limit {
        counter = 'LINE'
        value = 'COVEREDRATIO'
        minimum = 1.0
      }
    }
    rule {
      element = 'CLASS'
      limit {
        counter = 'BRANCH'
        value = 'COVEREDRATIO'
        minimum = 1.0
      }
    }
  }
}

check.dependsOn jacocoTestCoverageVerification

asciidoctor {
  inputs.dir snippetsDir
  dependsOn test
}
